@using MvcContrib.UI.Grid
@*@model IEnumerable<Domain.Entities.Category>*@
@*@model WebUI.Models.PagedViewModel<Domain.Entities.Category>*@
@model RegnumStore.Models.PagedViewModel<RegnumStore.Models.CategoryViewModel>
           
           
     <style type="text/css">
    .grid-style {
        margin-left: 10px;
        margin-right: 0;
     
    }
</style>

<div id="sequence">
@{
    Html.RenderPartial("Pager", Model.PagedList);
}



    @Html.Grid(Model.PagedList).Columns(column =>
        {
        
            column.For(x => x.CategoryName).SortColumnName("CategoryName").Named("Категория").Attributes(x =>
              {
                  return new Dictionary<string, object> { { "style", "vertical-align: middle" } };
        });

    @*column.For(x => Ajax.ActionLink("Вверх", "CategorySequence", new { categoryId = x.CategoryID, actionType = "Up" }, new AjaxOptions
    {
        UpdateTargetId = "sequence",
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST"
    })).Sortable(false).Named("Вверх");*@

        
            //column.For(x => (x.IsActive) ? Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: #8EB50C' title='Категория " + x.CategoryName + " числится активной'></i>") : Html.Raw("<i class='fa fa-square-o fa-2x' title='Категория " + x.CategoryName + " не активна' style='color: red;'></i>")).SortColumnName("IsActive").Named("Активная");

            //column.For(x => x.PhotoCount);
            //column.For(x => x.VisibleCount);
            //column.For(x => x.ChoosenCount);

            column.Custom(x => x.PhotoCount).SortColumnName("PhotoCount").Header(o => "<span class='glyphicon glyphicon-asterisk'> </span>").Encode(false)
                      .Attributes(x =>
                      {
                          return new Dictionary<string, object> { { "style", "vertical-align: middle" }, { "title", "Общее количество изображений " } };
                      }).Sortable(false);


            //column.Custom(x => x.VisibleCount).SortColumnName("VisibleCount").Header(o => "<span class='glyphicon glyphicon-eye-close' title='Количество неотображаемых изображений '> </span>").Encode(false)
            //          .Attributes(x =>
            //          {
            //              return new Dictionary<string, object> { { "style", "vertical-align: middle" }, { "title", "Количество неотображаемых изображений " } };
            //          }).Sortable(false);

            
            //column.Custom(x => x.ChoosenCount).SortColumnName("ChoosenCount").Header(o => "<span class='glyphicon glyphicon-star' title='Количество избранных изображений, отображаемых в слайдере на главной странице '> </span>").Encode(false)
            //          .Attributes(x =>
            //          {
            //              return new Dictionary<string, object> { { "style", "vertical-align: middle" }, { "title", "Количество избранных изображений, отображаемых в слайдере на главной странице " } };
            //          }).Sortable(false);

            
            //column.For(x => x.CreateDate.ToShortDateString()).SortColumnName("CreateDate").Named("Дата создания");
            //column.For(x => x.UpdateDate.ToShortDateString()).SortColumnName("UpdateDate").Named("Дата изменения");

            
            //if (User.IsInRole("admin") || (User.IsInRole("SEO")))
            //{
            //    column.For(x => (x.KeyWords == null) ? Html.Raw("<i class='fa fa-square-o fa-2x' title='Ключевые слова не заданы' style='color: red'></i>") : Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: #8EB50C;' title='Ключевые слова присутствуют'></i>")).SortColumnName("KeyWords").Named("Keywords");
            //    column.For(x => (x.Snippet == null) ? Html.Raw("<i class='fa fa-square-o fa-2x' title='Сниппет не задан' style='color: red'></i>") : Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: #8EB50C;' title='Сниппет в наличии'></i>")).SortColumnName("Snippet").Named("Сниппет");
            //}

            //column.Custom(x => Html.Raw("<a href = " + Url.Action("EditCategory", "Admin", new { categoryId = x.CategoryID }) + " class='' title='Редактировать'><i class='fa fa-pencil-square-o fa-2x'></i></a>")).Header(o => "<span class='glyphicon glyphicon-edit'> </span>").Encode(false)
            //      .Attributes(x =>
            //      {
            //          return new Dictionary<string, object> { { "style", "vertical-align: middle" } };
            //      }).Sortable(false);


            //if (User.IsInRole("admin") || (User.IsInRole("ContentManager")))
            //{
            //    column.Custom(x => Html.Raw("<a href = " + Url.Action("DeleteCategory", "Admin", new {categoryId = x.CategoryID}) + " class='linkButton glyphicon glyphicon-remove btn-xs btn btn-danger' title='Удалить'></a>")).Named("Options").Header(o => "<span class='glyphicon glyphicon-remove'> </span>").Encode(false)
            //          .Attributes(x =>
            //              {
            //                  return new Dictionary<string, object> {{"style", "vertical-align: middle"}};
            //              }).Sortable(false);
            //}


            @*column.Custom(x => MvcHtmlString.Create(string.Format("<form action='/Admin/DeleteCategory' method='post'> <input id='categoryId' name='categoryId' type='hidden' value='{0}' /><input type='submit' value='Удалить' /></form>", x.CategoryID)))
                  .Named("Действие").Sortable(false);*@
        
            column.For(x => x.Sequence).SortColumnName("Sequence").Named("Порядок");
            column.For(
                   x => Html.Raw(Ajax.ActionLink(" ", "Categories", new { categoryId = x.CategoryID, actionType = "Up" }, new AjaxOptions
                   {
                       UpdateTargetId = "sequence",
                       InsertionMode = InsertionMode.Replace,
                       HttpMethod = "POST",
                       OnBegin = "gifLoaderBefore",
                       OnSuccess = "gifLoaderAfter",
                       OnFailure = "gifLoaderAfter",
                       OnComplete = "gifLoaderAfter"
                   }, new { @class = "glyphicon glyphicon-arrow-up btn btn-lg", @style = "color: #8EB50C;" }).ToString() + " " + (Ajax.ActionLink(" ", "Categories", new { categoryId = x.CategoryID, actionType = "Down" }, new AjaxOptions
                   {
                       UpdateTargetId = "sequence",
                       InsertionMode = InsertionMode.Replace,
                       HttpMethod = "POST",
                       OnBegin = "gifLoaderBefore",
                       OnSuccess = "gifLoaderAfter",
                       OnFailure = "gifLoaderAfter",
                       OnComplete = "gifLoaderAfter"
                   }, new { @class = "glyphicon glyphicon-arrow-down btn btn-lg", @style = "color: #8EB50C;" }))).ToString()).Sortable(false).Named("Упорядочить").Encode(false);
        
        
        }).Sort(Model.GridSortOptions).Attributes(@class => "table table-striped table-bordered table-hover table-condensed grid-style", @style => "margin-left:0;").Empty("Нет данных")


</div>

@*

column.For(x => Ajax.ActionLink("Вверх", "DimOrderStatusSequence", new { dimOrderStatusId = x.DimOrderStatusID, actionType = "Up"}, new AjaxOptions
               {
                   UpdateTargetId = "sequence",
                   InsertionMode = InsertionMode.Replace,
                   HttpMethod = "POST"
               })).Sortable(false).Named("Вверх");
*@





@*<script type="text/javascript">
    $(function() {
        $(".linkButton").click(
            function(event) {
                if (!confirm('Вы уверены, что хотите удалить выбранную запись?')) return false;
                event.preventDefault();
                var link = event.target;
                var action = link.href;
                while (link.tagName != 'FORM') {
                    //  alert(link.tagName);
                    link = link.parentElement;
                    //alert(link);
                    if (!link) {
                        //return alert('TROUBLE');
                        break;
                    }
                }
                link.action = action;
                link.method = "POST";
                link.submit();
            });
    });

</script>*@



@*<script src="@Url.Content("~/Scripts/jquery-1.8.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript"></script>*@