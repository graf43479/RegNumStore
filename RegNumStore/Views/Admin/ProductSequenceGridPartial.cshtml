@using MvcContrib.UI.Grid
@using RegnumStore.Extensions
@*@model IEnumerable<Domain.Entities.Category>*@
@model RegnumStore.Models.PagedViewModel<Domain.Entities.Product>

<div id="sequence">
   @Html.Grid(Model.PagedList).Columns(column =>
       {
       
           column.Custom(x => MvcHtmlString.Create(string.Format("<a href='{0}'><img class='example-image-link' src='{1}/{2}/{3}/{4}' alt='{5}'/></a>",
                                                              Url.Action("EditProduct", "Admin", new { productId = x.ProductID }),
                                                              Url.Content("~/Content"),
                                                              Domain.Constants.PRODUCT_IMAGE_FOLDER,
                                                              Domain.Constants.PRODUCT_IMAGE_PREVIEW_FOLDER,
                                                              ((System.IO.File.Exists(System.IO.Path.Combine(Server.MapPath
                                                                                                                                                          (@Url.Content("~/Content")),
                                                                                                                                                      Domain.Constants.PRODUCT_IMAGE_FOLDER, Domain.Constants.PRODUCT_IMAGE_PREVIEW_FOLDER, "Image"+x.ProductID.ToString() + x.ImgExt)) != true )) 
                                                                                                                                                      ? 
                                                                                                                                                      ("0.jpg") 
                                                                                                                                                      :
                                                                                                                                                      ("Image" + x.ProductID.ToString() + x.ImgExt),
                                                                                                                                                      x.ProductID
                                                                                                                                                      
                                                             
                                                    ))).Named("Изображение").Sortable(false).InsertAt(0);
    
    column.For(x => Html.ActionQueryLink(x.ProductID.ToString(), "EditProduct", new { productId = x.ProductID })).SortColumnName("ProductID").Sortable(false).Named("ID").Attributes(x =>
    {
        return new Dictionary<string, object> { { "style", "text-align: left; padding-left: 20px;" } };
    });
    
    //column.For(x => x.CategoryName).SortColumnName("Name").Named("Категория").Sortable(false);

    // column.For(x => x.Sequence).SortColumnName("Sequence").Named("Приоритет");
    //column.For(x => x.Name).SortColumnName("Name").Named("Категория");
    @*column.For(
        x => Html.Raw(Ajax.ActionLink(" ", "ProductSequence", new { productId = x.ProductID, actionType = "Up" }, new AjaxOptions
        {
            UpdateTargetId = "sequence",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST"
        }, new { @class = "Up" }).ToString() + " " + (Ajax.ActionLink(" ", "ProductSequence", new { productId = x.ProductID, actionType = "Down" }, new AjaxOptions
        {
            UpdateTargetId = "sequence",
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST"
        }, new { @class = "Down" }))).ToString()).Sortable(false).Named("Упорядочить").Encode(false);

        *@


    column.For(
         x => Html.Raw(Ajax.ActionLink(" ", "ProductSequence", new { productId = x.ProductID, actionType = "Up" }, new AjaxOptions
         {
             UpdateTargetId = "sequence",
             InsertionMode = InsertionMode.Replace,
             HttpMethod = "POST",
             OnBegin = "gifLoaderBefore",
             OnSuccess = "gifLoaderAfter",
             OnFailure = "gifLoaderAfter",
             OnComplete = "gifLoaderAfter"
         }, new { @class = "glyphicon glyphicon-arrow-up btn btn-lg", @style = "color: #8EB50C;" }).ToString() + " " + (Ajax.ActionLink(" ", "ProductSequence", new { productId = x.ProductID, actionType = "Down" }, new AjaxOptions
         {
             UpdateTargetId = "sequence",
             InsertionMode = InsertionMode.Replace,
             HttpMethod = "POST",
             OnBegin = "gifLoaderBefore",
             OnSuccess = "gifLoaderAfter",
             OnFailure = "gifLoaderAfter",
             OnComplete = "gifLoaderAfter"
         }, new { @class = "glyphicon glyphicon-arrow-down btn btn-lg", @style = "color: #8EB50C;" }))).ToString()).Sortable(false).Named("Упорядочить").Encode(false);

           

    /*column.Custom(x => MvcHtmlString.Create(string.Format("<form action='/Admin/DeleteCategory' method='post'> <input id='categoryId' name='categoryId' type='hidden' value='{0}' /><input type='submit' value='Удалить' /></form>", x.CategoryID)))
  .Named("Действие").Sortable(false);*/
}).Sort(Model.GridSortOptions).Attributes(@class => "table table-striped table-bordered table-hover table-condensed grid-style", @style => "margin-left:0;").Empty("Нет данных")

</div>



@*

<div id="sequence">

    @Html.Grid(Model.PagedList).Columns(column =>
        {
            column.For(x => Html.ActionQueryLink(x.Name, "EditCategory", new { categoryId = x.CategoryID })).SortColumnName("Name").Named("Категория");

            // column.For(x => x.Sequence).SortColumnName("Sequence").Named("Приоритет");
            //column.For(x => x.Name).SortColumnName("Name").Named("Категория");
            column.For(
                x => Html.Raw(Ajax.ActionLink(" ", "CategorySequence", new { categoryId = x.CategoryID, actionType = "Up" }, new AjaxOptions
                    {
                        UpdateTargetId = "sequence",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "POST"
                    }, new {@class="Up"}).ToString()+" "+  (Ajax.ActionLink(" ", "CategorySequence", new { categoryId = x.CategoryID, actionType = "Down" }, new AjaxOptions
                        {
                            UpdateTargetId = "sequence",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "POST"
                        }, new { @class = "Down" }))).ToString()).Sortable(false).Named("Упорядочить").Encode(false);

            /*column.Custom(x => MvcHtmlString.Create(string.Format("<form action='/Admin/DeleteCategory' method='post'> <input id='categoryId' name='categoryId' type='hidden' value='{0}' /><input type='submit' value='Удалить' /></form>", x.CategoryID)))
          .Named("Действие").Sortable(false);*/
        }).Sort(Model.GridSortOptions).Attributes(@class => "grid-style").Empty("Нет данных")

</div>*@