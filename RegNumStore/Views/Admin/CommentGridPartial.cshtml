@using MvcContrib.UI.Grid
@*@model IEnumerable<Domain.Entities.Category>*@
@model RegnumStore.Models.PagedViewModel<Domain.Entities.Comment>




@using (Html.BeginForm("DeleteComment", "Admin", FormMethod.Post))
{    
    
    <div class="col-lg-12" style="padding: 0; margin: 10px 0 10px 0;">
        <button type="submit" class="btn btn-md btn-danger" style=""><span class="glyphicon glyphicon-remove">&nbsp;</span>Удалить выбранное</button>
    </div>
    
    Html.RenderPartial("Pager", Model.PagedList);
    
    
    @Html.Grid(Model.PagedList).Columns(column =>
    {
        if (User.IsInRole("admin") || (User.IsInRole("ContentManager")))
        {
            column.Custom(a => Html.Raw("<input type='checkbox' class='reqPayment' name='resubmit' value='" + a.CommentID + "'/>")).Header(o => "<input type=\"checkbox\" id='chkHeader' />")
                  .Encode(false)
                  .Sortable(false)
                  .HeaderAttributes(new Dictionary<string, object> {{"style", "width:20px"}});
        }


        column.For(x => x.CreateDate.ToShortDateString()).SortColumnName("CreateDate").Named("Дата вопроса").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "width: 80px;" } };
        });

        column.For(x => x.AnswerDate.ToShortDateString()).SortColumnName("AnswerDate").Named("Дата обновления").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "width: 80px;" } };
        });
        
        column.For(x => x.Tittle).SortColumnName("Tittle").Named("Имя").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "width: 120px; word-wrap: hyphenate;" } };
        });

        column.For(x => x.QuestionText).Named("Вопрос").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "text-align: left; word-wrap: normal; width: 150px;" } };
        }).Sortable(false);

        column.For(x => x.AnswerText).Named("Ответ").Attributes(x =>
        {
            return new Dictionary<string, object> { { "style", "text-align: left; word-wrap: normal; " } };
        }).Sortable(false); 
        
        
        column.For(x => (x.IsAccept) ? Html.Raw("<i class='fa fa-check-square-o fa-2x' style='color: #8EB50C' title='Отзыв \"" + x.Tittle + "\" отображается'></i>") : Html.Raw("<i class='fa fa-square-o fa-2x' title='Отзыв \"" + x.Tittle + "\" не отображается' style='color: red;'></i>")).SortColumnName("IsAccept").Named("Активен");
        
        
        
        column.Custom(x => Html.Raw("<a href = " + Url.Action("EditComment", "Admin", new { commentId = x.CommentID }) + " title='Редактировать'><i class='fa fa-pencil-square-o fa-2x'></i></a>")).Header(o => "<span class='glyphicon glyphicon-edit'> </span>").Encode(false)
                                        .Sortable(false);
        
    }
                  ).Sort(Model.GridSortOptions).Attributes(@class => "table table-striped table-bordered table-hover table-condensed grid-style").Empty("Нет данных")
 
    
    
    Html.RenderPartial("Pager", Model.PagedList);    
    
    <div class="col-lg-12" style="padding: 0; margin: 10px 0 10px 0;">
                    <button type="submit" class="btn btn-md btn-danger" style=""><span class="glyphicon glyphicon-remove">&nbsp;</span>Удалить выбранное</button>
    </div>
    
             

     
     
}




<script type="text/javascript">
    $(document).ready(function () {
        $('#chkHeader').change(function () {
            if ($(this).is(':checked')) {
                $('.reqPayment').attr('checked', 'checked');
            } else {
                $('.reqPayment').removeAttr('checked');
            }
        });
    }); 
</script>